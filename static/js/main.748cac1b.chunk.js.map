{"version":3,"sources":["components/TodoFilter/TodoFilter.tsx","api.js","components/TodoList/TodoList.tsx","components/TodoRandomize/TodoRandomize.tsx","components/Loader/Loader.tsx","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["Status","getData","endpoint","fetch","then","response","ok","Error","statusText","json","TodoFilter","props","renderStatus","query","htmlFor","className","type","value","id","onChange","event","target","preventDefault","searchByTitle","name","changeShowStatus","TodoRandomize","onClick","temp","j","todos","i","length","Math","floor","random","setShuffleTodos","shuffleTodos","TodoList","state","all","filteredTodos","filter","todo","title","includes","setState","showTodosByStatus","active","completed","this","loadData","_prevProps","prevState","a","selectedUserId","map","classNames","checked","readOnly","userId","chooseUser","React","Component","Loader","CurrentUser","email","phone","loadUser","prevProps","user","App","reset","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.748cac1b.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoFilter.scss';\n\nenum Status {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n\ninterface Props {\n  changeShowStatus: (value: Status) => void;\n  searchByTitle: (value: string) => void;\n  renderStatus: Status;\n  query: string;\n}\n\nexport const TodoFilter: React.FC<Props> = (props) => {\n  const handleChangeUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    event.preventDefault();\n    const { value } = event.target;\n\n    props.changeShowStatus(value as Status);\n  };\n\n  const handleSearchByTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    event.preventDefault();\n\n    props.searchByTitle(value);\n  };\n\n  const { renderStatus, query } = props;\n\n  return (\n    <>\n      <label htmlFor=\"searchByTitle\">\n        Search by title:\n        <input\n          className=\"filter__input\"\n          type=\"text\"\n          value={query}\n          id=\"searchByTitle\"\n          onChange={handleSearchByTitle}\n        />\n      </label>\n\n      <label htmlFor=\"searchByStatus\">\n        Search by status:\n        <select\n          className=\"filter__input\"\n          name=\"searchByStatus\"\n          id=\"searchByStatus\"\n          value={renderStatus}\n          onChange={handleChangeUser}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </label>\n    </>\n  );\n};\n","const API_URL = 'https://mate.academy/students-api/';\n\nexport const getData = (endpoint) => {\n  return fetch(`${API_URL}${endpoint}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response.json();\n    });\n};\n\nexport const getUser = (userId) => {\n  return getData(`users/${userId}`);\n};\n\nexport const getTodos = () => {\n  return getData('todos');\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { getTodos } from '../../api';\nimport { TodoFilter } from '../TodoFilter';\nimport { TodoRandomize } from '../TodoRandomize';\nimport './TodoList.scss';\n\ninterface State {\n  todos: Todo[];\n  query: string;\n  renderStatus: Status;\n}\n\ninterface Props {\n  chooseUser: (userId: number) => void;\n  selectedUserId: number;\n}\n\nenum Status {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n\nexport class TodoList extends React.Component<Props, State> {\n  state: State = {\n    todos: [],\n    query: '',\n    renderStatus: Status.all,\n  };\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentDidUpdate(_prevProps: Props, prevState: State) {\n    if (prevState.query !== this.state.query) {\n      this.showTodosByStatus();\n    }\n  }\n\n  filteredTodos = () => {\n    const { query, todos } = this.state;\n\n    return todos.filter((todo) => todo.title && todo.title.includes(query));\n  };\n\n  searchByTitle = (value: string) => {\n    this.setState({ query: value });\n  };\n\n  changeShowStatus = (value: Status) => {\n    this.setState({ renderStatus: value as Status });\n  };\n\n  showTodosByStatus = () => {\n    const { renderStatus } = this.state;\n\n    switch (renderStatus) {\n      case Status.active:\n        return this.filteredTodos().filter(todo => !todo.completed);\n      case Status.completed:\n        return this.filteredTodos().filter(todo => todo.completed);\n      case Status.all:\n      default:\n        return this.filteredTodos();\n    }\n  };\n\n  setShuffleTodos = (todos: Todo[]) => {\n    this.setState({ todos });\n  };\n\n  async loadData() {\n    const todos = await getTodos();\n\n    this.setState({ todos });\n  }\n\n  render() {\n    const { query, renderStatus, todos } = this.state;\n    const { selectedUserId } = this.props;\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n        <div className=\"TodoList__controls\">\n          <TodoFilter\n            changeShowStatus={this.changeShowStatus}\n            searchByTitle={this.searchByTitle}\n            renderStatus={renderStatus}\n            query={query}\n          />\n\n          <TodoRandomize\n            setShuffleTodos={this.setShuffleTodos}\n            todos={todos}\n          />\n        </div>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {this.showTodosByStatus().map(todo => (\n              <li\n                className={classNames(\n                  'TodoList__item',\n                  {\n                    'TodoList__item--unchecked': !todo.completed,\n                    'TodoList__item--checked': todo.completed,\n                  },\n                )}\n                key={todo.id}\n              >\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={todo.completed}\n                    readOnly\n                  />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className={classNames(\n                    'TodoList__user-button',\n                    'button',\n                    {\n                      'TodoList__user-button--selected': todo.userId === selectedUserId,\n                    },\n                  )}\n                  type=\"button\"\n                  onClick={(event) => {\n                    event.preventDefault();\n                    this.props.chooseUser(todo.userId);\n                  }}\n                >\n                  {`User #${todo.userId}`}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\ninterface Props {\n  setShuffleTodos: (todos: Todo[]) => void;\n  todos: Todo[];\n}\n\nexport const TodoRandomize: React.FC<Props> = (props) => {\n  const shuffleTodos = () => {\n    let j = 0;\n    let temp;\n    const { todos } = props;\n\n    for (let i = todos.length - 1; i > 0; i -= 1) {\n      j = Math.floor(Math.random() * (i + 1));\n      temp = todos[j];\n      todos[j] = todos[i];\n      todos[i] = temp;\n    }\n\n    return props.setShuffleTodos(todos);\n  };\n\n  return (\n    <button\n      className=\"button\"\n      type=\"button\"\n      onClick={(event) => {\n        event.preventDefault();\n        shuffleTodos();\n      }}\n    >\n      Randomize\n    </button>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { getUser } from '../../api';\nimport { Loader } from '../Loader';\nimport './CurrentUser.scss';\n\ninterface Props {\n  selectedUserId: number;\n  chooseUser: (userId: number) => void;\n}\n\ntype State = User;\n\nexport class CurrentUser extends React.Component<Props, State> {\n  state = {\n    id: 0,\n    name: '',\n    email: '',\n    phone: '',\n  };\n\n  componentDidMount() {\n    this.loadUser();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.selectedUserId !== this.props.selectedUserId) {\n      this.loadUser();\n    }\n  }\n\n  async loadUser() {\n    const { selectedUserId } = this.props;\n\n    this.setState({ id: 0 });\n    const user: User = await getUser(selectedUserId);\n\n    this.setState({ ...user } as User);\n  }\n\n  render() {\n    const {\n      id,\n      name,\n      phone,\n      email,\n    } = this.state;\n\n    if (id === 0) {\n      return (\n        <Loader />\n      );\n    }\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            {`Selected user: ${id}`}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{name}</h3>\n        <p className=\"CurrentUser__email\">{email}</p>\n        <p className=\"CurrentUser__phone\">{phone}</p>\n\n        <button\n          type=\"button\"\n          className=\"button CurrentUser__button\"\n          onClick={() => {\n            this.props.chooseUser(0);\n          }}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\ninterface State {\n  selectedUserId: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedUserId: 0,\n  };\n\n  chooseUser = (userId: number) => {\n    this.reset();\n    this.setState({ selectedUserId: userId });\n  };\n\n  reset = () => {\n    this.setState({ selectedUserId: 0 });\n  };\n\n  render() {\n    const { selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            chooseUser={this.chooseUser}\n            selectedUserId={selectedUserId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                selectedUserId={selectedUserId}\n                chooseUser={this.chooseUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}